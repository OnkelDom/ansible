---
- name: install rpmfusion repos
  package:
    name: "{{ item }}"
    state: present
  with_items:
    - http://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-29.noarch.rpm
    - http://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-29.noarch.rpm
  when:
    - media_sonarr_enabled|default(false)|bool == true

- name: install packages
  package:
    name: ['gettext', 'mono-core', 'mono-devel', 'mediainfo', 'libmediainfo', 'sqlite', 'libzen']
    state: present
  register: package_install
  when:
    - media_sonarr_enabled|default(false)|bool == true

- name: create folders
  file:
    path: "{{ item.folder }}"
    state: directory
    owner: "{{ media_sonarr_service_user }}"
    group: "{{ media_sonarr_service_group }}"
    mode: 0750
  with_items:
    - folder: "/home/{{ media_sonarr_service_user }}/.config"
      mode: "0750"
    - folder: "/home/{{ media_sonarr_service_user }}/.config/NzbDrone"
      mode: "0750"
    - folder: "{{ media_sonarr_installdir }}"
      mode: "0755"
  when:
    - media_sonarr_enabled|default(false)|bool == true
    - package_install is success

- name: check for installed sonarr
  stat:
    path: "{{ media_sonarr_installdir }}/NzbDrone.exe"
  register: sonarr_bin
  when:
    - media_sonarr_enabled|default(false)|bool == true
    - package_install is success

- name: extract sonarr
  unarchive:
    src: "{{ media_sonarr_url }}"
    dest: "{{ media_sonarr_installdir }}"
    owner: "{{ media_sonarr_service_user }}"
    group: "{{ media_sonarr_service_group }}"
    remote_src: true
    extra_opts: "--strip-components=1"
  when:
    - media_sonarr_enabled|default(false)|bool == true
    - package_install is success
    - not sonarr_bin.stat.exists

- name: change file permissions
  file:
    path: "{{ media_sonarr_installdir }}"
    owner: "{{ media_sonarr_service_user }}"
    group: "{{ media_sonarr_service_group }}"
    recurse: yes
  when:
    - media_sonarr_enabled|default(false)|bool == true
    - package_install is success

- name: configure sonarr
  template:
    src: sonarr_conf.j2
    dest: "/home/{{ media_sonarr_service_user }}/.config/NzbDrone/config.xml"
    owner: "{{ media_sonarr_service_user }}"
    group: "{{ media_sonarr_service_group }}"
    mode: 0640
    force: no
  when:
    - media_sonarr_enabled|default(false)|bool == true
    - package_install is success
  notify:
    - restart sonarr

- name: copy sonarr systemd unit
  template:
    src: sonarr_service.j2
    dest: "/etc/systemd/system/sonarr.service"
    owner: root
    group: root
    mode: 0640
  when:
    - media_sonarr_enabled|default(false)|bool == true
    - package_install is success
  notify:
    - reload systemd
    - restart sonarr

- block:
  - name: copy sonarr ufw role
    template:
      src: ufw-sonarr.j2
      dest: /etc/ufw/applications.d/ufw-sonarr
      owner: root
      group: root
      mode: 0644
  - name: UFW allow Sonarr
    ufw:
      rule: allow
      name: Sonarr
    notify:
      - reload ufw
  when:
    - media_sonarr_enabled|default(false)|bool == true
    - package_install is success
    - media_sonarr_use_firewall|default(false)|bool == true

- name: include web_caddy for reverse proxy configuration
  include_role:
    name: web_caddy
  vars:
    web_caddy_vhosts:
      - name: reverse_proxy_{{ media_sonarr_reverse_proxy_path }}
        content: |
          {{ media_sonarr_reverse_proxy_domain }} {
            proxy /{{ media_sonarr_reverse_proxy_path }} localhost:{{ media_sonarr_port }} {
              transparent
            }
          }
  when:
    - media_sonarr_enabled|default(false)|bool == true
    - package_install is success
    - media_sonarr_use_reverse_proxy|default(false)|bool == true

- name: start and enable sonarr services
  service:
    name: sonarr
    state: restarted
    enabled: yes
  when:
    - media_sonarr_enabled|default(false)|bool == true
    - package_install is success
