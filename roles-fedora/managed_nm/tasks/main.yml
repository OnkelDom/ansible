---
- name: install NetworkManager
  package:
    name: ['NetworkManager', 'NetworkManager-libnm', 'python3-netaddr', 'python3-dbus', 'python-dbus', 'python3-networkmanager']
    state: present
  register: nm_install
  when:
    - managed_nm_enabled|default(false)|bool == true

- name: start and enable NetworkManager
  service:
    name: NetworkManager
    state: started
    enabled: yes
  when:
    - managed_nm_enabled|default(false)|bool == true
    - nm_install is success

- name: configure basis Network
  nmcli:
    conn_name: default
    ifname: eth0
    type: ethernet
    mac: "{{ ansible_default_ipv4.macaddress }}"
    ip4: "{{ ansible_default_ipv4.address }}/{{ (ansible_default_ipv4.address + '/' + ansible_default_ipv4.netmask) | ipaddr('prefix') }}"
    gw4: "{{ ansible_default_ipv4.gateway }}"
    #dns4: "{{ managed_nm_dns_v4 }}"
    #ip6: "{{ ansible_default_ipv6.address }}/{{ ansible_default_ipv6.prefix }}"
    #gw6: "{{ managed_nm_gw_v6 }}"
    #dns6: "{{ managed_nm_dns_v6 }}"
    state: present
  when:
    - managed_nm_enabled|default(false)|bool == true
    - nm_install is success
  notify:
    - restart NetworkManager
