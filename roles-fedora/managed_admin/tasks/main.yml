---
- name: install packages
  package:
    name: ['vim', 'vim-enhanced', 'git', 'xclip', 'powerline', 'powerline-fonts', 'tmux-powerline', 'vim-powerline', 'python3']
    state: present
  when:
    - managed_admin_enabled|default(false)|bool == true

- name: add admins
  user:
    name: "{{ item.user }}"
    comment: "{{ item.fullname }}"
    groups: wheel
    shell: /bin/bash
    create_home: true
    state: "{{ item.state }}"
  with_items: "{{ managed_admin_users }}"
  when:
    - managed_admin_enabled|default(false)|bool == true
    - managed_admin_users is defined

- name: add admins pubkeys
  authorized_key:
    user: "{{ item.user }}"
    state: "{{ item.state }}"
    key: "{{ item.key }}"
  with_items: "{{ managed_admin_users }}"
  when:
    - managed_admin_enabled|default(false)|bool == true
    - managed_admin_users is defined
    - item.state == 'present'

- name: install pip3 powerline_gitstatus
  command: "pip3 install --user powerline_gitstatus"
  become: true
  become_user: "{{ item.user }}"
  with_items: "{{ managed_admin_users }}"
  when:
    - managed_admin_enabled|default(false)|bool == true
    - managed_admin_users is defined
    - item.repo is defined
    - item.state == 'present'

- name: clone github.com/onkeldom/.dot
  git:
    repo: "{{ item.repo }}"
    dest: /home/{{ item.user }}/.dot
    update: no
  become: true
  become_user: "{{ item.user }}"
  with_items: "{{ managed_admin_users }}"
  when:
    - managed_admin_enabled|default(false)|bool == true
    - managed_admin_users is defined
    - item.repo is defined
    - item.state == 'present'

- name: create .config folder for all admins
  file:
    path: /home/{{ item.user }}/.config
    owner: "{{ item.user }}"
    group: "{{ item.user }}"
    state: directory
    mode: 0755
  with_items: "{{ managed_admin_users }}"
  when:
    - managed_admin_enabled|default(false)|bool == true
    - managed_admin_users is defined
    - item.state == 'present'

- name: set symlinks for ~/.gitconfig
  file:
    src: '/home/{{ item.user }}/.dot/.gitconfig'
    dest: '/home/{{ item.user }}/.gitconfig'
    state: link
  become: true
  become_user: "{{ item.user }}"
  with_items: "{{ managed_admin_users }}"
  when:
    - managed_admin_enabled|default(false)|bool == true
    - managed_admin_users is defined
    - item.repo is defined
    - item.state == 'present'

- name: set symlinks for ~/.vimrc
  file:
    src: '/home/{{ item.user }}/.dot/.vimrc'
    dest: '/home/{{ item.user }}/.vimrc'
    state: link
  become: true
  become_user: "{{ item.user }}"
  with_items: "{{ managed_admin_users }}"
  when:
    - managed_admin_enabled|default(false)|bool == true
    - managed_admin_users is defined
    - item.repo is defined
    - item.state == 'present'

- name: set symlinks for ~/.vim
  file:
    src: '/home/{{ item.user }}/.dot/.vim'
    dest: '/home/{{ item.user }}/.vim'
    state: link
  become: true
  become_user: "{{ item.user }}"
  with_items: "{{ managed_admin_users }}"
  when:
    - managed_admin_enabled|default(false)|bool == true
    - managed_admin_users is defined
    - item.repo is defined
    - item.state == 'present'

- name: set symlinks for ~/.bashrc
  file:
    src: '/home/{{ item.user }}/.dot/.bashrc'
    dest: '/home/{{ item.user }}/.bashrc'
    state: link
    force: true
  become: true
  become_user: "{{ item.user }}"
  with_items: "{{ managed_admin_users }}"
  when:
    - managed_admin_enabled|default(false)|bool == true
    - managed_admin_users is defined
    - item.repo is defined
    - item.state == 'present'

- name: set symlinks for ~/.tmux.conf
  file:
    src: '/home/{{ item.user }}/.dot/.tmux.conf'
    dest: '/home/{{ item.user }}/.tmux.conf'
    state: link
  become: true
  become_user: "{{ item.user }}"
  with_items: "{{ managed_admin_users }}"
  when:
    - managed_admin_enabled|default(false)|bool == true
    - managed_admin_users is defined
    - item.repo is defined
    - item.state == 'present'

- name: set symlinks for powerline_gitstatus
  file:
    src: '/home/{{ item.user }}/.dot/powerline'
    dest: '/home/{{ item.user }}/.config/powerline'
    state: link
  with_items: "{{ managed_admin_users }}"
  when:
    - managed_admin_enabled|default(false)|bool == true
    - managed_admin_users is defined
    - item.repo is defined
    - item.state == 'present'

- name: remove old homes
  file:
    path: '/home/{{ item.user }}'
    state: absent
  with_items: "{{ managed_admin_users }}"
  when:
    - managed_admin_enabled|default(false)|bool == true
    - managed_admin_users is defined
    - item.state == 'absent'
